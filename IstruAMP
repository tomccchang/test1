void configure_Instrument_AMP_v2(void){

	/** Initializes OPAMP module. */
	opamp_module_init();

	/*
	*  OPAMP 0 voltage follower
	*/
	
	/** Creates a new configuration structure for the OPAMP0. */
	struct opamp0_config conf_OP0;
	
	/** Settings and fill with the default settings. */
	opamp0_get_config_defaults(&conf_OP0);
	
	/* Set the the OPAMP0 as "Voltage Follower" mode. */
	conf_OP0.negative_input = OPAMP0_NEG_MUX_OUT0;
	//conf_OP0.positive_input = OPAMP0_POS_MUX_DAC;
	conf_OP0.positive_input = OPAMP0_POS_MUX_PIN0;
	conf_OP0.r1_connection = OPAMP0_RES1_MUX_GND;// voltage shift zero
	conf_OP0.config_common.potentiometer_selection= OPAMP_POT_MUX_8R_8R;// ????
	conf_OP0.config_common.r1_enable = true;
	conf_OP0.config_common.r2_vcc = false;
	conf_OP0.config_common.r2_out = true;
	conf_OP0.config_common.on_demand = false;
	conf_OP0.config_common.run_in_standby = false;
	conf_OP0.config_common.bias_value = OPAMP_BIAS_MODE_3;
	conf_OP0.config_common.analog_out = true;
	
	/* Setup  OA0POS pin. */
	struct system_pinmux_config opamp0_pos_pin_conf;
	system_pinmux_get_config_defaults(&opamp0_pos_pin_conf);
	opamp0_pos_pin_conf.direction = SYSTEM_PINMUX_PIN_DIR_INPUT;
	opamp0_pos_pin_conf.mux_position = MUX_PA06B_OPAMP_OAPOS0;
	system_pinmux_pin_set_config(PIN_PA06B_OPAMP_OAPOS0, &opamp0_pos_pin_conf);
	
	/* Setup  OA0OUT pin. */
	struct system_pinmux_config opamp0_out_pin_conf;
	system_pinmux_get_config_defaults(&opamp0_out_pin_conf);
	opamp0_out_pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT;
	opamp0_out_pin_conf.mux_position = MUX_PA07B_OPAMP_OAOUT0;
	system_pinmux_pin_set_config(PIN_PA07B_OPAMP_OAOUT0, &opamp0_out_pin_conf);

	/* Initialize and enable the OPAMP0 with the user settings. */
	opamp0_set_config(&conf_OP0);
	opamp_enable(OPAMP_0);

	/* Wait for the output ready. */
	while(!opamp_is_ready(OPAMP_0));
	
	/*
	*  OPAMP1 voltage follower
	*/
	/** Creates a new configuration structure for the OPAMP1. */
	struct opamp1_config conf_OP1;

	/** Settings and fill with the default settings. */
	opamp1_get_config_defaults(&conf_OP1);

	/* Set the the OPAMP1 as "Voltage Follower" mode. */
	conf_OP1.negative_input = OPAMP1_NEG_MUX_OUT1;
	conf_OP1.positive_input = OPAMP1_POS_MUX_PIN1;
	conf_OP1.r1_connection = OPAMP1_RES1_MUX_GND;
	//conf.config_common.potentiometer_selection= OPAMP_POT_MUX_14R_2R;
	//conf.config_common.potentiometer_selection= OPAMP_POT_MUX_8R_8R;
	conf_OP1.config_common.r1_enable = false;
	conf_OP1.config_common.r2_vcc = false;
	conf_OP1.config_common.r2_out = false;
	conf_OP1.config_common.on_demand = false;
	conf_OP1.config_common.run_in_standby = false;
	conf_OP1.config_common.bias_value = OPAMP_BIAS_MODE_3;
	conf_OP1.config_common.analog_out = true;
	
	/* Setup  OA1OUT pin. */
	struct system_pinmux_config opamp1_out_pin_conf;
	system_pinmux_get_config_defaults(&opamp1_out_pin_conf);
	opamp1_out_pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT;
	opamp1_out_pin_conf.mux_position = MUX_PB06B_OPAMP_OAOUT1;
	system_pinmux_pin_set_config(PIN_PB06B_OPAMP_OAOUT1, &opamp1_out_pin_conf);
	
	/* Setup  OA1POS pin. */
	struct system_pinmux_config opamp1_pos_pin_conf;
	system_pinmux_get_config_defaults(&opamp1_pos_pin_conf);
	opamp1_out_pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
	opamp1_out_pin_conf.mux_position = MUX_PB09B_OPAMP_OAPOS1;
	system_pinmux_pin_set_config(PIN_PB09B_OPAMP_OAPOS1, &opamp1_pos_pin_conf);

	/* Initialize and enable the OPAMP1 with the user settings. */
	opamp1_set_config(&conf_OP1);
	opamp_enable(OPAMP_1);

	/* Wait for the output ready. */
	while(!opamp_is_ready(OPAMP_1));
	
	/*
	*  OPAMP2 Subtracter
	*/
	/** Creates a new configuration structure for the OPAMP2. */
	struct opamp2_config conf_OP2;

	opamp2_get_config_defaults(&conf_OP2);
	// Set the the OPAMP0 as "Non-Inverting PGA" mode. //
	conf_OP2.negative_input = OPAMP2_NEG_MUX_TAP2;// OP2 negative feedback
	conf_OP2.positive_input = OPAMP2_POS_MUX_TAP0;// connect to OP0
	conf_OP2.r1_connection = OPAMP2_RES1_MUX_OUT1;// connect to OP1
	conf_OP2.config_common.r1_enable = true;
	conf_OP2.config_common.r2_vcc = false;
	conf_OP2.config_common.r2_out = true;
	conf_OP2.config_common.analog_out = true;
	conf_OP2.config_common.potentiometer_selection= OPAMP_POT_MUX_8R_8R;// ???????
	// Setup OA2OUT pin. //
	struct system_pinmux_config opamp2_out_pin_conf;
	system_pinmux_get_config_defaults(&opamp2_out_pin_conf);
	opamp2_out_pin_conf.direction = SYSTEM_PINMUX_PIN_DIR_OUTPUT;
	opamp2_out_pin_conf.mux_position = MUX_PA04B_OPAMP_OAOUT2;
	system_pinmux_pin_set_config(PIN_PA04B_OPAMP_OAOUT2, &opamp2_out_pin_conf);
	opamp2_set_config(&conf_OP2);
	opamp_enable(OPAMP_2);
	// Wait for the output ready. //
	while(!opamp_is_ready(OPAMP_2));
}
